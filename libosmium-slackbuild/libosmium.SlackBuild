#!/bin/bash

#  Slackware package build script for Libosmium
#  Any use of the provided files is at your own risk.
#  
#  Author: Wael Hammoudeh Email: w_hammoudeh@hotmail.com
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Package option DOC is provided to include html documentation files; 
# defaults to "no", to enable use: DOC=yes ./libosmium.SlackBuild
# If enabled you can find them in directory: /usr/local/html/libosmium

CWD=$(pwd)

PKGNAM=libosmium
VERSION=2.17.0
BUILD=${BUILD:-3}
TAG=${TAG:-_wh}
TMP=${TMP:-/tmp}
SRC=$TMP/$PKGNAM-$VERSION
PKGDEST=$TMP/$PKGNAM
MYPREFIX=/usr/local

# By default we do not include html documentation
DOC=${DOC:-no}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

rm -rf $SRC $PKGDEST
cd $TMP
tar xvzf $CWD/$PKGNAM-$VERSION.tar.gz

cd $SRC

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

mkdir -p build $PKGDEST

cd build

cmake -DCMAKE_INSTALL_PREFIX=/usr/local \
      -DINSTALL_GDALCPP=ON \
      -DCMAKE_BUILD_TYPE=Release \
      ..

make -j$(expr $(nproc) + 1)

make DESTDIR=$PKGDEST install

# make documentations if user wants them
if [ $DOC = "yes" ]; then
  echo ""
  # update old configuration in Doxyfile.in
  doxygen -u ../doc/Doxyfile.in

  # correct HAVE_DOT setting in Doxyfile! Replace YES with NO
  # sed -E "s|^HAVE_DOT(\s)*=(\s)*YES|HAVE_DOT = NO|" -i ../doc/Doxyfile.in -- commented out 6/11/2021 WH
  
  echo "Building documentation ..."
  
  make doc
  
  echo "Including html files in package in directory $MYPREFIX/html/$PKGNAM ..."
  mkdir -p $PKGDEST/$MYPREFIX/html/$PKGNAM
  cp doc/html/* $PKGDEST/$MYPREFIX/html/$PKGNAM/
  cp -r doc/html/search/ $PKGDEST/$MYPREFIX/html/$PKGNAM/
fi

# copy FindOsmium.cmake file to /usr/local/share/cmake directory
mkdir -p $PKGDEST/$MYPREFIX/share/cmake
cp ../cmake/FindOsmium.cmake $PKGDEST/$MYPREFIX/share/cmake/

mkdir -p $PKGDEST/install
cat $CWD/slack-desc > $PKGDEST/install/slack-desc

# Save those package-making files .. may save your ass someday
mkdir -p $PKGDEST/$MYPREFIX/doc/$PKGNAM-$VERSION
cp $CWD/LICENSE $PKGDEST/$MYPREFIX/doc/$PKGNAM-$VERSION/
cp $CWD/libosmium.SlackBuild $PKGDEST/$MYPREFIX/doc/$PKGNAM-$VERSION/
cp $CWD/README $PKGDEST/$MYPREFIX/doc/$PKGNAM-$VERSION/
cp $CWD/slack-desc $PKGDEST/$MYPREFIX/doc/$PKGNAM-$VERSION/
cp $CWD/libosmium.info $PKGDEST/$MYPREFIX/doc/$PKGNAM-$VERSION/

cd $PKGDEST
/sbin/makepkg -l y -c n $TMP/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.tgz
